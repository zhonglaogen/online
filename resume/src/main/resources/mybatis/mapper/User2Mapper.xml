<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlx.resume.mapper.User2Mapper" >
  <resultMap id="BaseResultMap" type="com.zlx.resume.entity.User2" >
    <id column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="u_name" property="uName" jdbcType="VARCHAR" />
    <result column="u_password" property="uPassword" jdbcType="VARCHAR" />
    <result column="u_gender" property="uGender" jdbcType="BIT" />
    <result column="u_birth" property="uBirth" jdbcType="VARCHAR" />
    <result column="u_card" property="uCard" jdbcType="CHAR" />
    <result column="u_email" property="uEmail" jdbcType="VARCHAR" />
    <result column="u_tel" property="uTel" jdbcType="CHAR" />
    <result column="u_school" property="uSchool" jdbcType="VARCHAR" />
    <result column="u_location" property="uLocation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    u_id, u_name, u_password, u_gender, u_birth, u_card, u_email, u_tel, u_school, u_location
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zlx.resume.entity.User2Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user2
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user2
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user2
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zlx.resume.entity.User2Example" >
    delete from user2
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zlx.resume.entity.User2" >
    insert into user2 (u_id, u_name, u_password, 
      u_gender, u_birth, u_card, u_email, 
      u_tel, u_school, u_location
      )
    values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, #{uPassword,jdbcType=VARCHAR}, 
      #{uGender,jdbcType=BIT}, #{uBirth,jdbcType=VARCHAR}, #{uCard,jdbcType=CHAR}, #{uEmail,jdbcType=VARCHAR}, 
      #{uTel,jdbcType=CHAR}, #{uSchool,jdbcType=VARCHAR}, #{uLocation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zlx.resume.entity.User2" >
    insert into user2
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        u_id,
      </if>
      <if test="uName != null" >
        u_name,
      </if>
      <if test="uPassword != null" >
        u_password,
      </if>
      <if test="uGender != null" >
        u_gender,
      </if>
      <if test="uBirth != null" >
        u_birth,
      </if>
      <if test="uCard != null" >
        u_card,
      </if>
      <if test="uEmail != null" >
        u_email,
      </if>
      <if test="uTel != null" >
        u_tel,
      </if>
      <if test="uSchool != null" >
        u_school,
      </if>
      <if test="uLocation != null" >
        u_location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uName != null" >
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uGender != null" >
        #{uGender,jdbcType=BIT},
      </if>
      <if test="uBirth != null" >
        #{uBirth,jdbcType=VARCHAR},
      </if>
      <if test="uCard != null" >
        #{uCard,jdbcType=CHAR},
      </if>
      <if test="uEmail != null" >
        #{uEmail,jdbcType=VARCHAR},
      </if>
      <if test="uTel != null" >
        #{uTel,jdbcType=CHAR},
      </if>
      <if test="uSchool != null" >
        #{uSchool,jdbcType=VARCHAR},
      </if>
      <if test="uLocation != null" >
        #{uLocation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zlx.resume.entity.User2Example" resultType="java.lang.Integer" >
    select count(*) from user2
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user2
    <set >
      <if test="record.uId != null" >
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.uName != null" >
        u_name = #{record.uName,jdbcType=VARCHAR},
      </if>
      <if test="record.uPassword != null" >
        u_password = #{record.uPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.uGender != null" >
        u_gender = #{record.uGender,jdbcType=BIT},
      </if>
      <if test="record.uBirth != null" >
        u_birth = #{record.uBirth,jdbcType=VARCHAR},
      </if>
      <if test="record.uCard != null" >
        u_card = #{record.uCard,jdbcType=CHAR},
      </if>
      <if test="record.uEmail != null" >
        u_email = #{record.uEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.uTel != null" >
        u_tel = #{record.uTel,jdbcType=CHAR},
      </if>
      <if test="record.uSchool != null" >
        u_school = #{record.uSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.uLocation != null" >
        u_location = #{record.uLocation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user2
    set u_id = #{record.uId,jdbcType=INTEGER},
      u_name = #{record.uName,jdbcType=VARCHAR},
      u_password = #{record.uPassword,jdbcType=VARCHAR},
      u_gender = #{record.uGender,jdbcType=BIT},
      u_birth = #{record.uBirth,jdbcType=VARCHAR},
      u_card = #{record.uCard,jdbcType=CHAR},
      u_email = #{record.uEmail,jdbcType=VARCHAR},
      u_tel = #{record.uTel,jdbcType=CHAR},
      u_school = #{record.uSchool,jdbcType=VARCHAR},
      u_location = #{record.uLocation,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlx.resume.entity.User2" >
    update user2
    <set >
      <if test="uName != null" >
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null" >
        u_password = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uGender != null" >
        u_gender = #{uGender,jdbcType=BIT},
      </if>
      <if test="uBirth != null" >
        u_birth = #{uBirth,jdbcType=VARCHAR},
      </if>
      <if test="uCard != null" >
        u_card = #{uCard,jdbcType=CHAR},
      </if>
      <if test="uEmail != null" >
        u_email = #{uEmail,jdbcType=VARCHAR},
      </if>
      <if test="uTel != null" >
        u_tel = #{uTel,jdbcType=CHAR},
      </if>
      <if test="uSchool != null" >
        u_school = #{uSchool,jdbcType=VARCHAR},
      </if>
      <if test="uLocation != null" >
        u_location = #{uLocation,jdbcType=VARCHAR},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlx.resume.entity.User2" >
    update user2
    set u_name = #{uName,jdbcType=VARCHAR},
      u_password = #{uPassword,jdbcType=VARCHAR},
      u_gender = #{uGender,jdbcType=BIT},
      u_birth = #{uBirth,jdbcType=VARCHAR},
      u_card = #{uCard,jdbcType=CHAR},
      u_email = #{uEmail,jdbcType=VARCHAR},
      u_tel = #{uTel,jdbcType=CHAR},
      u_school = #{uSchool,jdbcType=VARCHAR},
      u_location = #{uLocation,jdbcType=VARCHAR}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
</mapper>